include "application.conf"

play.application.loader = org.example.hello.impl.HelloLoader
play.server.pidfile.path = /dev/null
play.http.secret.key = ${?PLAY_HTTP_SECRET_KEY}

lagom.cluster.exit-jvm-when-system-terminated = on

hello.cassandra {
  keyspace = ${?CASSANDRA_KEYSPACE}
  ## list the contact points here
  contact-points = [${?CASSANDRA_CONTACT_POINTS}]

  ## override Lagom's ServiceLocator-based ConfigSessionProvider
  session-provider = ${?CASSANDRA_SESSION_PROVIDER}

  keyspace-autocreate = ${?CASSANDRA_AUTOCREATE}
  tables-autocreate = true

  authentication {
    username = ${?CASSANDRA_USERNAME}
    password = ${?CASSANDRA_PASSWORD}
  }

  ssl {
    truststore.path = ${?CASSANDRA_TRUSTSTORE_PATH}
    truststore.password = ${?CASSANDRA_TRUSTSTORE_PASSWORD}
    keystore.path = ${?CASSANDRA_KEYSTORE_PATH}
    keystore.password = ${?CASSANDRA_KEYSTORE_PASSWORD}
  }
}

lagom.persistence.read-side.cassandra {
  keyspace = ${hello.cassandra.keyspace}

  contact-points = ${hello.cassandra.contact-points}
  session-provider = ${hello.cassandra.session-provider}

  keyspace-autocreate = ${hello.cassandra.keyspace-autocreate}
  tables-autocreate = ${hello.cassandra.tables-autocreate}

  authentication = ${hello.cassandra.authentication}

  ssl = ${hello.cassandra.ssl}

  connection-pool {
    max-queue-size = 256
  }

  metrics-enabled = on
  jmx-reporting-enabled = on
  coordinated-shutdown-on-error = off
}

cassandra-journal {
  events-by-tag {
    bucket-size = ${?CASSANDRA_JOURNAL_BUCKET_SIZE}

    max-message-batch-size = ${?CASSANDRA_BATCH_SIZE}
  }

  keyspace = ${hello.cassandra.keyspace}

  contact-points = ${hello.cassandra.contact-points}
  session-provider = ${hello.cassandra.session-provider}

  keyspace-autocreate = ${hello.cassandra.keyspace-autocreate}
  tables-autocreate = ${hello.cassandra.tables-autocreate}

  authentication = ${hello.cassandra.authentication}

  ssl = ${hello.cassandra.ssl}

  write-consistency = ${?CASSANDRA_JOURNAL_WRITE_CONSISTENCY}
  read-consistency = ${?CASSANDRA_JOURNAL_READ_CONSISTENCY}

  max-message-batch-size = ${?CASSANDRA_BATCH_SIZE}

  speculative-executions = 1

  connection-pool {
    pool-timeout-millis = 5000
  }
}

cassandra-snapshot-store {
  keyspace = ${hello.cassandra.keyspace}

  contact-points = ${hello.cassandra.contact-points}
  session-provider = ${hello.cassandra.session-provider}

  keyspace-autocreate = ${hello.cassandra.keyspace-autocreate}
  tables-autocreate = ${hello.cassandra.tables-autocreate}

  authentication = ${hello.cassandra.authentication}

  ssl = ${hello.cassandra.ssl}

  write-consistency = ${?CASSANDRA_SNAPSHOT_WRITE_CONSISTENCY}
  read-consistency = ${?CASSANDRA_SNAPSHOT_READ_CONSISTENCY}

  speculative-executions = 1

  connection-pool {
    pool-timeout-millis = 5000
  }
}

cassandra-query-journal {
  read-consistency = ${?CASSANDRA_JOURNAL_READ_CONSISTENCY}
  speculative-executions = 1
}

akka {
  actor {
    provider = cluster
  }

  cluster {
    shutdown-after-unsuccessful-join-seed-nodes = 40s
  }

  management {
    cluster.bootstrap {
      contact-point-discovery {
        required-contact-point-nr = 1
        discovery-method = kubernetes-api
        service-name = "hello"
      }
    }

    http {
      port = 10003
      bind-hostname = "0.0.0.0"
      bind-port = 10003
    }
  }
}
